security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    #Authentifications            
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFromAuthenticator
            logout:
                path: app_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 2592000
            access_denied_handler: App\Security\AccessDeniedHandler

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    #Authorisation 
    access_control:
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/send-token-confirmation, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/new-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ['ROLE_USER','ROLE_ADMIN']}
        - { path: ^/admin, roles: ['ROLE_ADMIN']}
        #- { path: ^/profile, roles: ROLE_USER }
